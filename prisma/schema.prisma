// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}


model User { 
  id        String   @id @default(cuid()) 
  email     String   @unique 
  nama      String
  password  String   
  createdAt DateTime @default(now()) 
  updatedAt DateTime @updatedAt 
}

// Model untuk Rapat
model Meeting {
  id              String    @id @default(cuid())
  namaRapat       String
  startDateTime   DateTime  
  endDateTime     DateTime  
  agenda          String?   @db.Text 
  notulensiRapat  String?   @db.Text 
  status          Status    @default(AKTIF) 

  
  participants    MeetingParticipant[]
  
  documents       MeetingDocument[]

  createdAt       DateTime  @default(now())
  updatedAt       DateTime @updatedAt

  
  @@index([status])
  @@index([startDateTime])
}



model Participant {
  id            String    @id @default(cuid())
  nama          String
  email         String?   @unique 
  tandaTangan   String?   
  meetings      MeetingParticipant[] 
  createdAt     DateTime  @default(now())
  updatedAt     DateTime  @updatedAt
}



model MeetingParticipant {
  meetingId     String
  participantId String
  meeting       Meeting     @relation(fields: [meetingId], references: [id], onDelete: Cascade) 
  participant   Participant @relation(fields: [participantId], references: [id], onDelete: Cascade) 

  @@id([meetingId, participantId])
}

// Model untuk Dokumen/File Rapat
model MeetingDocument {
  id            String    @id @default(cuid())
  meetingId     String
  meeting       Meeting   @relation(fields: [meetingId], references: [id], onDelete: Cascade) // Jika meeting dihapus, dokumennya ikut terhapus
  namaFile      String    // Nama asli file
  pathFile      String    // Path penyimpanan di server atau URL cloud storage
  tipeFile      String    // Misal: 'image/jpeg', 'application/pdf'
  uploadedAt    DateTime  @default(now())
}

// Enum untuk Status Rapat
enum Status {
  AKTIF
  SELESAI
  ARSIP
}